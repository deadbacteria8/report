{% extends "base.html.twig" %}

{% block body %}
<div class="box2"><h1>6C om kodkvalitet</h1>
<h3>Codestyle</h3>
<p>Det finns riktlinjer på hur man ska skriva sin kod för att det ska bli lättare forstå koden. Riktlinjer/kodstil kan till exempel vara att man ska använda sig av camel-case när man namnger variabler och funktioner.</p>
<h3>Coverage</h3>
<p>Coverages ges i procent och talar om hur mycket av koden som är testad. En hög coverage brukar tyda på bra kvalitet på koden.</p>
<h3>Complexity</h3>
<p>Komplexiteten mäter hur svår koden är att förstå och hur svår koden är att upprätthålla/fortsätta utveckla med. Det kan självklart vara bra att ha lite komplexitet men om det blir för mycket så blir det svårt att fortsätta utveckla koden.</p>
<h3>Cohesion</h3>
<p>Cohesion är ett värde som beskriver hur bra klasser hänger ihop. Ett högt värde betyder att metoderna i klassen inte hänger ihop så bra. Om man kollar på min Queue-klass så kan man se att den har ett högre värde eftersom klassens metoder endast används i Game-klassen vilket tyder på att jag lika gärna skulle kunna flytta dess metoder till game-klassen istället.
<h3>Coupling</h3>
<p>Coupling talar om hur många andra klasser en klass använder sig av(EC) eller hur många andra klasser använder sig av klassen(AC). Min game-klass är till exempel bereonde av 3 andra klasser vilket ökar dens AC värde.</p>
<h3>Crap</h3>
<p>CRAPs värde är beräknat på metodens komplexitet och testbarhet. För att minska sin CRAP-score så kan man t.ex. göra fler tester som täcker dem olika utfallen i metoden det gäller. </p>
<h1>Phpmetrics</h1>
<p>Det första jag kan se är att jag har ett 2 violations för mina klasser. En violation gäller min Game-klass. Violationen är 'Probably bugged' vilket tyder på att klassen kan vara för stor, ha för långa metoder, beroende av flera andra klasser eller att komplexiteten är för hög.</p>
<img src="https://i.gyazo.com/fe5b8d92c4d31ce9524cc3012f82f5a0.png" width=500px>
<h3>Jag tar fram några svagheter från min game-klass</h3>
<p>Klassen har en för hög komplexitet. Komplexitets-rapporten för min game-klass tyder på att komplexiteten är för hög. Anledningen till detta kan vara för att flera metoder är långa, t.ex. min result metod. Ett fix skulle vara att korta ner metoderna och dela in dem i mindre metoder. Bild på result metoden:</p>
<img src="https://i.gyazo.com/8a8cf3b8eb3d5829d0115dfcde044e7c.png" width=500px>
<p>Klassen har 3 i afferent coupling eftersom den använder sig av queue klassen, deck klassen och players klassen. Det är egentligen inte ett så högt värde men det går fortfarande att justera. Eftersom queue klassens metoder endast är avsedda för gameklassen så behöver det egentligen inte vara en helt egen klass. Man skulle kunna flytta metoderna från queue klassen till game-klassen istället.</p>
<h3>Utöver min game-klass</h3>
<p>Min api kontroller har en violation-error eftersom den innehåller för många publika metoder. Metoderna måste vara publika för att dem ska kunna användas på sidan. Däremot så hade man kunnat dela upp Api-kontrollern i flera olika api-kontroller för att slippa detta problem.</p>
<h1>Scrutinizer</h1>
<p>I scrutinizer så ser jag att jag har ett scrutinizer-betyg på 9.9 vilket känns bra. Däremot är min code-coverage inte så hög eftersom jag inte har några tester till mina kontroller-klasser. Dessutom är min code-coverage inte så hög i min game klass eftersom jag var tvungen att ta bort ett test som inte fungerat helt. Jag kan åtgärda det sen för att höja min coverage och slippa någon hög crap-score. Jag hittar också några issues i Scrutinizer. Ett av dem är att jag använder == när jag jämför booleans när jag egentligen ska använda ===. Detta är ett Codestyle fel som man kan fixa lätt. Jag kollar in min CRAP score och complexity för min result metod i gameklassen. CRAP score grundar sig i komplexiteten av koden och därför så har jag en sämre score för både min CRAP score och complexity. Man kan förbättra detta genom att göra fler tester som täcker mer rader i result metoden.</p>
<h1>Förbättringar som ska göras.</h1>
<p>1.Gör ett nytt test för gameEnd metoden i game-klassen för att jag vill ha bättre code-coverage i min game-klass. Det tidigare testet fungerade inte eftersom start metoden inte initierades.</p>
<p>2.Jämföra booleans med === och inte == för att förbättra min code-style. Förhoppningsvis blir kvalitetsindexen i Scrutinizer högre.</p>
<p>3. Sedan så ska jag fixa en issue för min pullCard i min deck klass för att scrutinizer varnar för att det kan uppkomma en bugg. Detta kan göra så att koden får färre potentiella buggar och förhoppningsvis ökad kvalitetsindex i Scrutinizer.</p>
<p>4. Fixa issue med docblock kommentar där variabeln är deklarerad som @playerAmount och inte $playerAmount. Det är en lätt fix att göra och jag vet inte om detta kommer få någon större påverkan på min score från scrutinizer eller phpmetrics. Möjligtvist bättre kvalitetsindex i Scrutinizer.</p>
<p>En overview på rapporterna innan</p>
<img src="https://i.gyazo.com/e9808e4a947341bbb1925539c71d7732.png" width=500px>
<img src="https://i.gyazo.com/d7f59990528740c7601f2c52c268364c.png" width=200px>
</div>
{% endblock %}